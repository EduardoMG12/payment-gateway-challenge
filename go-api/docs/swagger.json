{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a main payment-gateway API .",
        "title": "Payment Gateway API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/accounts": {
            "get": {
                "description": "Returns a list of all accounts, with pagination support.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get all accounts with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Account"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new account with a username.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Account data for creation",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/cards": {
            "post": {
                "description": "Creates a new, fictional card and associates it with an account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Create a new card",
                "parameters": [
                    {
                        "description": "Account ID to associate the new card",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Card"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation failed",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Failed to create card",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/cards/{accountId}": {
            "get": {
                "description": "Returns a list of all cards associated with an account, ordered by creation date.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get all cards by account ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the account",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Card"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation failed",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve cards",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "description": "Creates a new transaction in the payment gateway.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseCreateTransactionRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/transactions/{accountId}": {
            "get": {
                "description": "Returns a list of transactions for a specific account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get transactions by Account ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ResponseCreateTransactionRequest"
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAccountRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "description": "@Description The username of the new account.\n@Example charlie",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "dto.CreateCardRequest": {
            "type": "object",
            "required": [
                "account_id"
            ],
            "properties": {
                "account_id": {
                    "description": "@Description Account ID to associate the new card\n@Example e252f5dd-ded2-4a30-a4a5-6e2940008d54",
                    "type": "string"
                }
            }
        },
        "dto.CreateTransactionRequest": {
            "type": "object",
            "required": [
                "account_id",
                "amount_cents",
                "type"
            ],
            "properties": {
                "account_id": {
                    "description": "@Description The account's ID for which the transaction will be performed.\n@Example e7b40123-cb12-41fa-b5bc-5a128448027e",
                    "type": "string"
                },
                "amount_cents": {
                    "description": "@Description The transaction amount in cents. Must be a positive integer.\n@Example 10000",
                    "type": "integer"
                },
                "card_token": {
                    "description": "@Description The credit card token (optional for some transaction types like DEPOSIT).\n@Example 16ecac04-9e45-4a5b-b7d4-d6c1c66bafd6",
                    "type": "string",
                    "maxLength": 126,
                    "minLength": 20
                },
                "type": {
                    "description": "@Description The type of transaction. Valid options are: DEPOSIT, PURCHASE, REFUND, CHARGE.\n@Example PURCHASE",
                    "type": "string",
                    "enum": [
                        "DEPOSIT",
                        "PURCHASE",
                        "REFUND",
                        "CHARGE"
                    ]
                }
            }
        },
        "dto.ResponseCreateTransactionRequest": {
            "type": "object",
            "required": [
                "account_id",
                "amount_cents",
                "type"
            ],
            "properties": {
                "account_id": {
                    "description": "@Description The ID of the account associated with the transaction.\n@Example e7b40123-cb12-41fa-b5bc-5a128448027e",
                    "type": "string"
                },
                "amount_cents": {
                    "description": "@Description The transaction amount in cents.\n@Example 10000",
                    "type": "integer"
                },
                "card_id": {
                    "description": "@Description The ID of the credit card used for the transaction. It will be null if no card was associated with the transaction.\n@Example 16ecac04-9e45-4a5b-b7d4-d6c1c66bafd6",
                    "type": "string"
                },
                "type": {
                    "description": "@Description The type of the transaction.\n@Example PURCHASE",
                    "type": "string",
                    "enum": [
                        "DEPOSIT",
                        "PURCHASE",
                        "REFUND",
                        "CHARGE"
                    ]
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "@Description The creation timestamp of the account.\n@Example 2025-09-22T19:15:24.526505Z",
                    "type": "string"
                },
                "id": {
                    "description": "@Description The unique identifier of the account.\n@Example 550e8400-e29b-41d4-a716-446655440000",
                    "type": "string"
                },
                "updated_at": {
                    "description": "@Description The last update timestamp of the account.\n@Example 2025-09-22T19:15:24.526505Z",
                    "type": "string"
                },
                "username": {
                    "description": "@Description The unique username for the account.\n@Example charlie",
                    "type": "string"
                }
            }
        },
        "models.Card": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "@Description The unique identifier of the account this card belongs to.\n@Example 550e8400-e29b-41d4-a716-446655440000",
                    "type": "string"
                },
                "card_token": {
                    "description": "@Description The unique, irreversible token for the card.\n@Example 5b7c16af7278094cd14bd041079111ed00fa832c8a460d8e3f40156408d99475",
                    "type": "string"
                },
                "created_at": {
                    "description": "@Description The creation timestamp of the card.\n@Example 2025-09-22T19:15:24.526505Z",
                    "type": "string"
                },
                "id": {
                    "description": "@Description The unique identifier of the card.\n@Example 550e8400-e29b-41d4-a716-446655440000",
                    "type": "string"
                },
                "last_four_digits": {
                    "description": "@Description The last four digits of the card number for identification.\n@Example 8995",
                    "type": "string"
                }
            }
        }
    }
}
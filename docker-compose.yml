services:

  rabbitMQ:
    image: "rabbitmq:3-management"
    container_name: "rabbitMQ"
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_UI_PORT}:15672"
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: "postgres:15"
    container_name: "postgres"
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rust-processor:
    build:
     context: ./rust-processor
     dockerfile: Dockerfile
    container_name: "rust-processor"
    depends_on:
      rabbitMQ:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      go-api:
        condition: service_healthy
    env_file:
      - .env
      
  go-api:
    build:
      context: ./go-api
      dockerfile: Dockerfile
    container_name: go-api
    depends_on:
      rabbitMQ:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    ports:  
      - "${API_PORT}:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
  
  frontend:
    container_name: frontend-prod
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    depends_on:
      go-api:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:80"

volumes:
  rabbitmq_data:
  postgres_data:
  redis_data: